name: Build & Enrich Latest

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
      PLAID_SECRET: ${{ secrets.PLAID_SECRET }}
      PLAID_ENV: ${{ secrets.PLAID_ENV }}
      PLAID_ACCESS_TOKENS: ${{ secrets.PLAID_ACCESS_TOKENS }}
      OUTPUT_DIR: data/raw

      # Azure (optional for AI features)
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
      AZURE_OPENAI_EMBEDDINGS: ${{ secrets.AZURE_OPENAI_EMBEDDINGS }}
      AZURE_OPENAI_API_VERSION: 2024-02-15-preview

      # Email (set EMAIL_DRY_RUN="1" for login-only CI tests)
      EMAIL_ENABLED: "1"
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: "587"
      SMTP_SSL_PORT: "465"
      SMTP_STARTTLS: "1"
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
      EMAIL_CC: ${{ secrets.EMAIL_CC }}
      EMAIL_BCC: ${{ secrets.EMAIL_BCC }}
      EMAIL_DRY_RUN: "1"
      EMAIL_STRICT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install papermill ipykernel matplotlib

      - name: Prepare runtime state
        run: |
          mkdir -p .state
          echo "${PLAID_ACCESS_TOKENS}" > .state/access_tokens.json
          if [ ! -f .state/plaid_cursors.json ]; then echo "{}" > .state/plaid_cursors.json; fi

      - name: Run build notebook
        run: |
          papermill scripts/build_latest.ipynb scripts/build_latest.ipynb

      - name: Run enrich notebook
        run: |
          papermill scripts/enrich_transactions.ipynb scripts/enrich_transactions.ipynb

      - name: Commit outputs if changed
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Always add latest.csv
          git add data/raw/latest.csv

          # Processed/enriched outputs (add if they exist)
          [ -f data/processed/latest_enriched.csv ] && git add data/processed/latest_enriched.csv || true
          [ -f data/processed/digest_latest.txt ] && git add data/processed/digest_latest.txt || true
          [ -f data/processed/goal_nudges_latest.txt ] && git add data/processed/goal_nudges_latest.txt || true

          # Insights (JSON/MD/CSV/images)
          if ls data/processed/insights/* 1> /dev/null 2>&1; then
            git add data/processed/insights/*
          fi

          # merchants_dim.csv if it exists
          [ -f config/merchants_dim.csv ] && git add config/merchants_dim.csv || true

          if ! git diff --staged --quiet; then
            git commit -m "Auto-update raw, processed & insights [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi