name: Build & Enrich Latest

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
      PLAID_SECRET: ${{ secrets.PLAID_SECRET }}
      PLAID_ENV: ${{ secrets.PLAID_ENV }}
      PLAID_ACCESS_TOKENS: ${{ secrets.PLAID_ACCESS_TOKENS }}
      OUTPUT_DIR: data/raw

      # Azure keys optional; AI steps will no-op if missing
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
      AZURE_OPENAI_EMBEDDINGS: ${{ secrets.AZURE_OPENAI_EMBEDDINGS }}
      AZURE_OPENAI_API_VERSION: 2024-02-15-preview

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug: show repo head & requirements
        run: |
          set -eux
          git rev-parse HEAD
          test -f requirements.txt && cat requirements.txt || true

      - name: Install deps (sanitize)
        run: |
          set -eux
          sed -i '/^[[:space:]]*azure-ai-openai[[:space:]]*$/d' requirements.txt || true
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install papermill ipykernel

      - name: Prepare runtime state
        run: |
          mkdir -p .state
          echo "${PLAID_ACCESS_TOKENS}" > .state/access_tokens.json
          if [ ! -f .state/plaid_cursors.json ]; then echo "{}" > .state/plaid_cursors.json; fi

      - name: Run build notebook
        run: |
          papermill scripts/build_latest.ipynb scripts/build_latest.ipynb

      - name: Run enrich notebook
        run: |
          papermill scripts/enrich_transactions.ipynb scripts/enrich_transactions.ipynb

      - name: Commit outputs if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/raw/latest.csv config/merchants_dim.csv
          if ! git diff --staged --quiet; then
            git commit -m "Auto-update latest.csv & merchants_dim [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
