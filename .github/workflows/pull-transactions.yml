name: Build & Enrich Latest

on:
  workflow_dispatch:
  schedule:
    - cron: "29 */6 * * *"  # every 6 hours at :29 (optional, keep or remove)

permissions:
  contents: write

concurrency:
  group: build-latest
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    env:
      # Plaid
      PLAID_CLIENT_ID: ${{ secrets.PLAID_CLIENT_ID }}
      PLAID_SECRET: ${{ secrets.PLAID_SECRET }}
      PLAID_ENV: ${{ secrets.PLAID_ENV }}
      PLAID_ACCESS_TOKENS: ${{ secrets.PLAID_ACCESS_TOKENS }}

      # Output dir used by both notebooks (relative to repo root)
      OUTPUT_DIR: data/raw

      # Azure OpenAI (optional; AI steps no-op if unset)
      AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
      AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
      AZURE_OPENAI_DEPLOYMENT: ${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
      AZURE_OPENAI_EMBEDDINGS: ${{ secrets.AZURE_OPENAI_EMBEDDINGS }}
      AZURE_OPENAI_API_VERSION: 2024-02-15-preview

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Debug: workspace & tree
        run: |
          echo "WS=$GITHUB_WORKSPACE"
          pwd
          ls -la
          git rev-parse HEAD

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # Sanitize just in case; harmless if not present
          if [ -f requirements.txt ]; then sed -i '/^[[:space:]]*azure-ai-openai[[:space:]]*$/d' requirements.txt || true; fi
          cat requirements.txt
          pip install -r requirements.txt
          pip install papermill ipykernel

      - name: Prepare runtime state
        run: |
          mkdir -p .state
          echo "${PLAID_ACCESS_TOKENS}" > .state/access_tokens.json
          if [ ! -f .state/plaid_cursors.json ]; then echo "{}" > .state/plaid_cursors.json; fi

      - name: Run build notebook (writes data/raw/latest.csv)
        working-directory: ${{ github.workspace }}
        run: |
          echo "CWD (build) = $(pwd)"
          papermill scripts/build_latest.ipynb scripts/build_latest.ipynb
          echo "After build, listing data/raw:"
          ls -la "$GITHUB_WORKSPACE/data/raw" || true

      - name: Run enrich notebook (reads exact latest.csv path)
        working-directory: ${{ github.workspace }}
        env:
          LATEST_CSV_ABS: ${{ github.workspace }}/data/raw/latest.csv
        run: |
          echo "CWD (enrich) = $(pwd)"
          echo "LATEST_CSV_ABS=$LATEST_CSV_ABS"
          test -f "$LATEST_CSV_ABS" && echo "latest.csv present" || (echo "latest.csv missing"; ls -la "$GITHUB_WORKSPACE/data/raw" || true)
          papermill scripts/enrich_transactions.ipynb scripts/enrich_transactions.ipynb

      - name: Commit outputs if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/raw/latest.csv config/merchants_dim.csv
          if ! git diff --staged --quiet; then
            git commit -m "Auto-update latest.csv & merchants_dim [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
